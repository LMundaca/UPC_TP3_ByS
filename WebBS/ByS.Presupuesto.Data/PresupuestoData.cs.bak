using System;
using System.Collections.Generic;
using System.Configuration;

using ByS.Presupuesto.Entities;

namespace ByS.Presupuesto.Data
{ 
	/// <summary>
	/// Proyecto    :  Modulo de Mantenimiento de : 
	/// Creacion    : CROM - Orlando Carril Ram√≠rez
	/// Fecha       : 26/11/2015-12:29:08 a.m.
	/// Descripcion : Capa de Datos 
	/// Archivo     : [Presupuesto.PresupuestoData.cs]
	/// </summary>
	public class PresupuestoData
	{ 
		private string conexion = string.Empty;
		public PresupuestoData()
		{
            conexion = Util.ConexionBD();
		}
		#region /* Proceso de SELECT ALL */ 

		/// <summary>
		/// Retorna un LISTA de registros de la Entidad Presupuesto.Presupuesto
		/// En la BASE de DATO la Tabla : [Presupuesto.Presupuesto]
		/// <summary>
		/// <returns>List</returns>
        public List<PresupuestoEntity> Listar(int? pID)
        {
            List<PresupuestoEntity> lstPresupuestoEntity = new List<PresupuestoEntity>();
            try
            {
                using (_DBMLPresupuestoDataContext SQLDC = new _DBMLPresupuestoDataContext(conexion))
                {
                    var resul = SQLDC.pa_S_Presupuesto(pID);
                    foreach (var item in resul)
                    {
                        lstPresupuestoEntity.Add(new PresupuestoEntity()
                        {
                            Codigo = item.codPresupuesto,
                            desNombre = item.desNombre,
                            numAnio = item.numAnio,
                            fecInicio = item.fecInicio,
                            fecCierre = item.fecCierre,
                            codRegEstado = item.codRegEstado,
                            segUsuarioCrea = item.segUsuarioCrea,
                            segUsuarioEdita = item.segUsuarioEdita,
                            segFechaCrea = item.segFechaCrea,
                            segFechaEdita = item.segFechaEdita,
                            segMaquinaOrigen = item.segMaquinaOrigen,
                            indEliminado = item.indEliminado,

                        });
                    }
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return lstPresupuestoEntity;
        }
		#endregion 

//        #region /* Proceso de SELECT BY ID CODE */ 

//        /// <summary>
//        /// Retorna una ENTIDAD de registro de la Entidad Presupuesto.Presupuesto
//        /// En la BASE de DATO la Tabla : [Presupuesto.Presupuesto]
//        /// <summary>
//        /// <returns>Entidad</returns>
//        public Presupuesto Find(int prm_codPresupuesto)
//        {
//            Presupuesto miEntidad = new Presupuesto();
//            try
//            {
//            using (CROMDataContext SQLDC = new CROMDataContext(conexion))
//            {
//                var resul = SQLDC.omgc_mnt_GetByIdCodePresupuesto(prm_codPresupuesto            );
//                foreach (var item in resul)
//                {
//                    miEntidad = new Presupuesto()
//                    {
//                    codPresupuesto = item.codPresupuesto,
//                    desNombre = item.desNombre,
//                    numAnio = item.numAnio,
//                    fecInicio = item.fecInicio,
//                    fecCierre = item.fecCierre,
//                    codRegEstado = item.codRegEstado,
//                    segUsuarioCrea = item.segUsuarioCrea,
//                    segUsuarioEdita = item.segUsuarioEdita,
//                    segFechaCrea = item.segFechaCrea,
//                    segFechaEdita = item.segFechaEdita,
//                    segMaquinaOrigen = item.segMaquinaOrigen,
//                    indEliminado = item.indEliminado,

//                    };
//                }
//            }
//        }
//        catch (Exception ex)
//        {
//            throw ex;
//        }
//        return miEntidad;
//}
//        #endregion 

//        #region /* Proceso de INSERT RECORD */ 

//        /// <summary>
//        /// Almacena el registro de una ENTIDAD de registro de Tipo Presupuesto
//        /// En la BASE de DATO la Tabla : [Presupuesto.Presupuesto]
//        /// <summary>
//        /// <param name = >itemPresupuesto</param>
//        public bool Insert( Presupuesto itemPresupuesto )
//        {
//            int codigoRetorno = -1;
//            try
//            {
//                using (CROMDataContext SQLDC = new CROMDataContext(conexion))
//                {
//                    codigoRetorno = SQLDC.omgc_mnt_InsertPresupuesto(
//                        itemPresupuesto.codPresupuesto,
//                        itemPresupuesto.desNombre,
//                        itemPresupuesto.numAnio,
//                        itemPresupuesto.fecInicio,
//                        itemPresupuesto.fecCierre,
//                        itemPresupuesto.codRegEstado,
//                        itemPresupuesto.segUsuarioCrea,
//                        itemPresupuesto.segUsuarioEdita,
//                        itemPresupuesto.segFechaCrea,
//                        itemPresupuesto.segFechaEdita,
//                        itemPresupuesto.segMaquinaOrigen,
//                        itemPresupuesto.indEliminado		);
//                }
//            }
//            catch (Exception ex)
//            {
//                throw ex;
//            }
//            return codigoRetorno == 0 ? true : false;
//        }
//        #endregion 

//        #region /* Proceso de UPDATE RECORD */ 

//        /// <summary>
//        /// Almacena el registro de una ENTIDAD de registro de Tipo Presupuesto
//        /// En la BASE de DATO la Tabla : [Presupuesto.Presupuesto]
//        /// <summary>
//        /// <param name = >itemPresupuesto</param>
//        public bool Update( Presupuesto itemPresupuesto )
//        {
//            int codigoRetorno = -1;
//            try
//            {
//                using (CROMDataContext SQLDC = new CROMDataContext(conexion))
//                {
//                    codigoRetorno = SQLDC.omgc_mnt_UpdatePresupuesto(
//                        itemPresupuesto.codPresupuesto,
//                        itemPresupuesto.desNombre,
//                        itemPresupuesto.numAnio,
//                        itemPresupuesto.fecInicio,
//                        itemPresupuesto.fecCierre,
//                        itemPresupuesto.codRegEstado,
//                        itemPresupuesto.segUsuarioCrea,
//                        itemPresupuesto.segUsuarioEdita,
//                        itemPresupuesto.segFechaCrea,
//                        itemPresupuesto.segFechaEdita,
//                        itemPresupuesto.segMaquinaOrigen,
//                        itemPresupuesto.indEliminado		);
//                }
//            }
//            catch (Exception ex)
//            {
//                throw ex;
//            }
//            return codigoRetorno == 0 ? true : false;
//        }
//        #endregion 

//        #region /* Proceso de DELETE BY ID CODE */ 

//        /// <summary>
//        /// ELIMINA un registro de la Entidad Presupuesto.Presupuesto
//        /// En la BASE de DATO la Tabla : [Presupuesto.Presupuesto]
//        /// <summary>
//        /// <returns>bool</returns>
//        public bool Delete(int prm_codPresupuesto)
//        {
//            int codigoRetorno = -1;
//            try
//            {
//                using (CROMDataContext SQLDC = new CROMDataContext(conexion))
//                {
//                    codigoRetorno = SQLDC.omgc_mnt_DeletePresupuesto(prm_codPresupuesto);
//                }
//            }
//            catch (Exception ex)
//            {
//                throw ex;
//            }
//            return codigoRetorno == 0 ? true : false;
//        }
//        #endregion 

	} 
} 
